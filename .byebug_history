continue
photosForDeletion
continue
params[:photos].present? and params[:photos] == 0
params[:photos].present? and params[:photos] == 1
params[:photos].present? and params[:photos] == 0
params[:photos].present? and params.photos == 0
params[:photos].present?
params[:photos].nil?
continue
params[:phoiiitos].nil?
params[:photos].nil?
continue
params[:phofffftos].nil?
params[:photos].nil?
params[:photos].present?
params[:photpppos].present?
params[:photo??????s].present?
params[:photos].present?
params[:photos].nil?
params[:phothhos].nil?
params[:photos].nil?
params[:photos].present?
params[:photos]
params[:photos].present?
params[:photos].present? and params[:photos].nil?
continue
step
params[:photos].present? and params[:photos].nil?
 params[:photos].nil? 
 my_params[:photos].nil? 
 my_params[:photos].present? 
 my_params[:photos] 
continue
params.permit(:title, :text, :photos)
params.permit(:title, :text, :photos => [])
params
params.permit[:photos => []]
continue
params.permit[:photos => []]
params.permit[:photos]
params
continue
update_params
continue
update_params
exit
continue
r
continue
@post.first ? true :false
@test.first ? true :false
@test.first
@test
@test = current_user.posts.where('id = 33333')
@popo.first
@popo
@post.first
continue
existingNotif ? true :false
if existingNotif end
if existingNotif 
existingNotif
existingNotif?
existingNotif.empty?
existingNotif.size
existingNotif
exixtingNotif
msg
continue
